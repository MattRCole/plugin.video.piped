from typing import TypedDict, Optional


class Stream(TypedDict, total=False):
    url: str
    format: str
    quality: str
    mimeType: str
    codec: str
    audioTrackId: Optional[str]
    audioTrackName: Optional[str]
    videoOnly: bool
    bitrate: int
    initStart: int
    initEnd: int
    indexStart: int
    indexEnd: int
    width: int
    height: int
    fps: float

class StreamSubtitle(TypedDict, total=False):
    url: str
    mimeType: str
    name: str
    code: str
    autoGenerated: bool


class PreviewFrame(TypedDict, total=False):
    urls: list[str]
    frameWidth: int
    frameHeight: int
    totalCount: int
    durationPerFrame: int
    framesPerPageX: int
    framesPerPageY: int


class Chapter(TypedDict, total=False):
    title: str
    image: str
    start: int


class StreamResponse(TypedDict, total=False):
    category: str
    dash: Optional[str]
    description: str
    dislikes: int
    hls: str
    lbryId: Optional[int]
    livestream: bool
    proxyUrl: bool
    thumbnailUrl: str
    title: str
    uploadDate: str
    uploader: str
    uploaderAvatar: str
    uploaderUrl: str
    uploaderSubscriberCount: int
    uploaderVerified: bool
    duration: int
    views: int
    likes: int

    audioStreams: list[Stream]
    chapters: list[Chapter]
    previewFrames: list[PreviewFrame]
    subtitles: list[StreamSubtitle]
    videoStreams: list[Stream]
